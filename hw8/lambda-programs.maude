mod LAMBDA-PROGRAMS is including LAMBDA-SYNTAX .
  ops id conditional zeroer mZeroer mZeroerBody mCombinator trueL falseL : -> Exp .

  eq id = /\ x : nat . x .

  eq trueL = /\ x : nat . /\ y : nat . x .

  eq falseL = /\ x : nat . /\ y : nat . y .

  eq conditional = cond(zero?(succ(0')), 0', zero?(succ(0'))) .
  
  eq zeroer = /\ f : nat -> nat . /\ n : nat . cond(zero?(n), n, f pred(n)) .

  eq mZeroer = m f : nat -> nat . /\ n : nat . cond(zero?(n), n, f pred(n)) .

endm